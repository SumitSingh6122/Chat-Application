{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumit singh\\\\Documents\\\\Chat App\\\\chat-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Home from './components/loginforms/home';\nimport { Toaster } from 'react-hot-toast';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport AppContainer from './components/appContainer';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const routers = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: '/browse',\n    element: /*#__PURE__*/_jsxDEV(AppContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this)\n  }]);\n  const [socket, setSocket] = useState(null);\n  const {\n    AuthenticatedUser\n  } = useSelector(store => store.Users);\n  useEffect(() => {\n    if (AuthenticatedUser) {\n      var newSocket = io('http://localhost:8080', {});\n      setSocket(newSocket);\n\n      // Clean up function to close the socket connection when the component unmounts\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [AuthenticatedUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: routers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/cq4t41UYWcvG/0xSfdP91Gf5w8=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","Toaster","createBrowserRouter","RouterProvider","AppContainer","useSelector","useEffect","useState","io","jsxDEV","_jsxDEV","App","_s","routers","path","element","fileName","_jsxFileName","lineNumber","columnNumber","socket","setSocket","AuthenticatedUser","store","Users","newSocket","close","className","children","router","_c","$RefreshReg$"],"sources":["C:/Users/sumit singh/Documents/Chat App/chat-app/src/App.js"],"sourcesContent":["import Home from './components/loginforms/home';\nimport { Toaster } from 'react-hot-toast';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport AppContainer from './components/appContainer';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const routers = createBrowserRouter([\n    {\n      path: '/',\n      element: <Home />\n    },\n    {\n      path: '/browse',\n      element: <AppContainer />\n    }\n  ]);\n\n  const [socket, setSocket] = useState(null);\n  const { AuthenticatedUser } = useSelector(store => store.Users);\n\n  useEffect(() => {\n    if (AuthenticatedUser) {\n      var newSocket = io('http://localhost:8080', {\n\n      });\n      setSocket(newSocket);\n\n      // Clean up function to close the socket connection when the component unmounts\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [AuthenticatedUser]);\n\n  return (\n    <div className=\"App\">\n      <RouterProvider router={routers} />\n      <Toaster />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,8BAA8B;AAC/C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAGX,mBAAmB,CAAC,CAClC;IACEY,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEL,OAAA,CAACV,IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAClB,CAAC,EACD;IACEL,IAAI,EAAE,SAAS;IACfC,OAAO,eAAEL,OAAA,CAACN,YAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC1B,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM;IAAEe;EAAkB,CAAC,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;EAE/DlB,SAAS,CAAC,MAAM;IACd,IAAIgB,iBAAiB,EAAE;MACrB,IAAIG,SAAS,GAAGjB,EAAE,CAAC,uBAAuB,EAAE,CAE5C,CAAC,CAAC;MACFa,SAAS,CAACI,SAAS,CAAC;;MAEpB;MACA,OAAO,MAAM;QACXA,SAAS,CAACC,KAAK,CAAC,CAAC;MACnB,CAAC;IACH;EACF,CAAC,EAAE,CAACJ,iBAAiB,CAAC,CAAC;EAEvB,oBACEZ,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA,CAACP,cAAc;MAAC0B,MAAM,EAAEhB;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCT,OAAA,CAACT,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACP,EAAA,CAnCQD,GAAG;EAAA,QAaoBN,WAAW;AAAA;AAAAyB,EAAA,GAblCnB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}