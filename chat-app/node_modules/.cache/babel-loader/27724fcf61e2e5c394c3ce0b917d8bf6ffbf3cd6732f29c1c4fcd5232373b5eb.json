{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userSlice from './userSlice';\nimport messageSlice from './messageSlice';\nimport socketSlice from './socket';\nimport { persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  Users: userSlice,\n  Message: messageSlice,\n  Socket: socketSlice\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: per,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","userSlice","messageSlice","socketSlice","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","Users","Message","Socket","persistedReducer","store","reducer","per","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"sources":["C:/Users/sumit singh/Documents/Chat App/chat-app/src/redux/store.js"],"sourcesContent":["import {combineReducers, configureStore}  from '@reduxjs/toolkit';\r\nimport userSlice from './userSlice';\r\nimport messageSlice from './messageSlice';\r\nimport socketSlice from './socket';\r\nimport {\r\n  \r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist';\r\n  import storage from 'redux-persist/lib/storage';\r\n  const persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n  }\r\n  const rootReducer=combineReducers({\r\n    Users:userSlice,\r\n    Message:messageSlice,\r\n    Socket:socketSlice,\r\n    \r\n})\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst store=configureStore({\r\n    reducer:per,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n          serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n          },\r\n        }),\r\n    \r\n})\r\nexport default store;\r\n"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AACjE,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,UAAU;AAClC,SAEIC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVH;AACF,CAAC;AACD,MAAMI,WAAW,GAAChB,eAAe,CAAC;EAChCiB,KAAK,EAACf,SAAS;EACfgB,OAAO,EAACf,YAAY;EACpBgB,MAAM,EAACf;AAEX,CAAC,CAAC;AACA,MAAMgB,gBAAgB,GAAGf,cAAc,CAACQ,aAAa,EAAEG,WAAW,CAAC;AACrE,MAAMK,KAAK,GAACpB,cAAc,CAAC;EACvBqB,OAAO,EAACC,GAAG;EACXC,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACrB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AAET,CAAC,CAAC;AACF,eAAeU,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}